<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
			 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
			 xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
			 xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources
		in the /WEB-INF/views directory -->
	<beans:bean
			class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- Contains Hibernate Datasource information -->
	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
				destroy-method="close">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url"
						value="jdbc:mysql://localhost:3306/individual_project_test" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="rootroot" />
	</beans:bean>

	<!-- Hibernate 4 SessionFactory Bean definition -->
	<beans:bean id="hibernate4AnnotatedSessionFactory"
				class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>model.Users</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
				</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

	<!-- Provides same functionality as @bean annotation -->
	<!-- The injected bean in the DAO Layer is the sessionFactory instance -->
	<!-- It is linked to the DAO instance bean at the Services Layer, i.e. the bean is traversing the layers -->
	<beans:bean id="userDAO" class="dao.JPADAO">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>

	<!-- Provides same functionality as @bean annotation -->
	<!-- The injected bean in the Services Layer is the userDAO instance -->
	<!-- It is linked to the sessionFactory instance bean at the DAO Layer, i.e. the bean is traversing the layers -->
	<beans:bean id="userService" class="services.ServiceImplementation">
		<beans:property name="userDAO" ref="userDAO"></beans:property>
	</beans:bean>

	<!-- Specifies which package to find the controller-->
	<context:component-scan base-package="controllers" />

	<!-- Specifies the Transaction Manager-->
	<tx:annotation-driven transaction-manager="transactionManager"/>

	<!-- Links Transaction Manager Bean to Session Bean, therefore all Sessions will have -->
	<!-- Transactional properties for ACID purposes-->
	<beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>

	<beans:bean id="messageSource"
				class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<beans:property name="basename" value="message" />
		<beans:property name="defaultEncoding" value="UTF-8" />
	</beans:bean>

</beans:beans>
